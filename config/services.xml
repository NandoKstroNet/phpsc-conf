<?xml version="1.0" encoding="UTF-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://symfony.com/schema/dic/services ../lib/Symfony/Component/DependencyInjection/Loader/schema/services-1.0.xsd">
	<imports>
		<import resource="environment.xml" />
	</imports>
	<services>
		<!-- Application Services -->
		<service id="authentication.service" class="PHPSC\Conference\Application\Service\AuthenticationService">
			<argument type="service" id="session" />
			<argument type="service" id="twitter.provider" />
			<argument type="service" id="user.management.service" />
		</service>
		<service id="user.json.service" class="PHPSC\Conference\Application\Service\UserJsonService">
			<argument type="service" id="authentication.service" />
			<argument type="service" id="user.management.service" />
		</service>
		<service id="talk.json.service" class="PHPSC\Conference\Application\Service\TalkJsonService">
			<argument type="service" id="authentication.service" />
			<argument type="service" id="talk.management.service" />
			<argument type="service" id="event.management.service" />
			<argument type="service" id="twitter.client" />
		</service>
		<service id="attendee.json.service" class="PHPSC\Conference\Application\Service\AttendeeJsonService">
			<argument type="service" id="authentication.service" />
			<argument type="service" id="event.management.service" />
			<argument type="service" id="attendee.management.service" />
			<argument type="service" id="payment.management.service" />
			<argument type="service" id="twitter.client" />
		</service>

		<!-- Domain Services -->
		<service id="user.management.service" class="PHPSC\Conference\Domain\Service\UserManagementService">
			<argument type="service" id="user.repository" />
			<argument type="service" id="twitter.client" />
		</service>
		<service id="event.management.service" class="PHPSC\Conference\Domain\Service\EventManagementService">
			<argument type="service" id="event.repository" />
		</service>
		<service id="talk.management.service" class="PHPSC\Conference\Domain\Service\TalkManagementService">
			<argument type="service" id="talk.repository" />
			<argument type="service" id="talkType.repository" />
		</service>
		<service id="attendee.management.service" class="PHPSC\Conference\Domain\Service\AttendeeManagementService">
			<argument type="service" id="attendee.repository" />
			<argument type="service" id="talk.management.service" />
		</service>
		<service id="payment.management.service" class="PHPSC\Conference\Domain\Service\PaymentManagementService">
			<argument type="service" id="pagseguro.notificationService" />
			<argument type="service" id="pagseguro.paymentService" />
			<argument type="service" id="talk.management.service" />
			<argument type="service" id="attendee.management.service" />
		</service>
		
		<!-- Entity Repositories -->
		<service id="user.repository" factory-service="entityManager" factory-method="getRepository">
			<argument>PHPSC\Conference\Domain\Entity\User</argument>
		</service>
		<service id="location.repository" factory-service="entityManager" factory-method="getRepository">
			<argument>PHPSC\Conference\Domain\Entity\Location</argument>
		</service>
		<service id="event.repository" factory-service="entityManager" factory-method="getRepository">
			<argument>PHPSC\Conference\Domain\Entity\Event</argument>
		</service>
		<service id="talk.repository" factory-service="entityManager" factory-method="getRepository">
			<argument>PHPSC\Conference\Domain\Entity\Talk</argument>
		</service>
		<service id="talkType.repository" factory-service="entityManager" factory-method="getRepository">
			<argument>PHPSC\Conference\Domain\Entity\TalkType</argument>
		</service>
		<service id="attendee.repository" factory-service="entityManager" factory-method="getRepository">
			<argument>PHPSC\Conference\Domain\Entity\Attendee</argument>
		</service>
	</services>
</container>